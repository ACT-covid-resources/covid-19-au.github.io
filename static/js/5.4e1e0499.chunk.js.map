{"version":3,"sources":["Map.js"],"names":["Map","province","newData","data","onClick","useState","loading","setLoading","useEffect","myData","setMyData","translate","temp","i","length","push","parseInt","className","width","window","innerWidth","left","align","top","chartType","options","region","colorAxis","colors","backgroundColor","datalessRegionColor","defaultColor","resolution","mapsApiKey","rootProps"],"mappings":"2MAwMeA,UA7Lf,YAAqD,IAArCC,EAAoC,EAApCA,SAAyBC,GAAW,EAA1BC,KAA0B,EAApBC,QAAoB,EAAXF,SAAW,EAOpBG,oBAAS,GAPW,mBAO3CC,EAP2C,KAOlCC,EAPkC,KAQhDC,qBAAU,WAEND,GAAW,KAaZ,CAACN,IAvB4C,MAwBnBI,mBAAS,MAxBU,mBAwBxCI,EAxBwC,KAwBhCC,EAxBgC,KAyKlD,OAhJEF,qBAAU,WAaN,IAXA,IAAIG,EAAY,CACZ,IAAM,SACN,IAAM,SACN,GAAK,QACL,GAAK,QACL,IAAM,SACN,IAAM,SACN,GAAK,QACL,IAAM,UAENC,EAAO,CAAC,CAAC,QAAQ,cACbC,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAE/BD,EAAKG,KAAK,CAACJ,EAAUT,EAAQW,GAAG,IAAIG,SAASd,EAAQW,GAAG,MAG5DH,EAAUE,KAoBX,CAACX,IA2GJK,EAAU,yBAAKW,UAAU,WAAf,cACN,kBAAC,IAAD,CACIC,MAAQC,OAAOC,WAAa,IAAI,OAAO,OACvCC,KAAK,OACLC,MAAM,QACNC,IAAI,MAGJC,UAAU,WACVrB,KAAMM,EACNgB,QA1BC,CACHC,OAAQ,KACRC,UAAW,CAAEC,OAAQ,CACb,UACA,UACA,UACA,YACRC,gBAAiB,QACjBC,oBAAqB,mBACrBC,aAAc,UACdC,WAAY,aAmBVC,WAAW,gBACXC,UAAW,CAAE,cAAe","file":"static/js/5.4e1e0499.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactEcharts from 'echarts-for-react/lib/core'\nimport echarts from 'echarts/lib/echarts'\nimport { Chart } from \"react-google-charts\";\nimport * as path from 'path';\nimport * as csv from 'fast-csv';\nimport Papa from 'papaparse';\nimport 'echarts/lib/chart/map'\nimport 'echarts/lib/component/visualMap'\n\n\nfunction Map ({ province, data, onClick, newData }) {\n    const keys = [\n        \"State\",\n        \"Confirmed\",\n        \"Deaths\",\n        \"Recovered\"\n    ];\n  const [loading, setLoading] = useState(true);\n    useEffect(() => {\n\n        setLoading(false)\n        // if (province) {\n        //   import(`echarts/map/json/province/${province.pinyin}.json`).then(map => {\n        //     echarts.registerMap(province.pinyin, map.default)\n        //     setLoading(false)\n        //   })\n        // } else {\n        //   import(`echarts/map/json/world.json`).then(map => {\n        //     echarts.registerMap('world', map.default)\n        //     setLoading(false)\n        //   })\n        // }\n\n    }, [province]);\n    const [ myData, setMyData] = useState(null);\n    useEffect(() => {\n\n        let translate = {\n            \"NSW\":\"AU-NSW\",\n            \"ACT\":\"AU-ACT\",\n            \"NT\":\"AU-NT\",\n            \"WA\":\"AU-WA\",\n            \"VIC\":\"AU-VIC\",\n            \"QLD\":\"AU-QLD\",\n            \"SA\":\"AU-SA\",\n            \"TAS\":\"AU-TAS\",\n        }\n        let temp = [[\"state\",\"confirmed\"]]\n        for(let i = 0; i < newData.length; i++)\n        {\n            temp.push([translate[newData[i][0]],parseInt(newData[i][1])])\n        }\n\n        setMyData(temp)\n\n        // Papa.parse(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vTWq32Sh-nuY61nzNCYauMYbiOZhIE8TfnyRhu1hnVs-i-oLdOO65Ax0VHDtcctn44l7NEUhy7gHZUm/pub?output=csv\", {\n        //     download: true,\n        //     complete: function(results) {\n        //\n        //     }\n        // });\n        // if (province) {\n        //   import(`echarts/map/json/province/${province.pinyin}.json`).then(map => {\n        //     echarts.registerMap(province.pinyin, map.default)\n        //     setLoading(false)\n        //   })\n        // } else {\n        //   import(`echarts/map/json/world.json`).then(map => {\n        //     echarts.registerMap('world', map.default)\n        //     setLoading(false)\n        //   })\n        // }\n\n    }, [province]);\n\n    // const getOption = () => {\n  //   return {\n  //     visualMap: {\n  //       show: true,\n  //       type: 'piecewise',\n  //       min: 0,\n  //       max: 2000,\n  //       align: 'right',\n  //       top: province ? 0 : '40%',\n  //       right: 0,\n  //       left: province ? 0 : 'auto',\n  //       inRange: {\n  //         color: [\n  //           '#ffc0b1',\n  //           '#ff8c71',\n  //           '#ef1717',\n  //           '#9c0505'\n  //         ]\n  //       },\n  //       pieces: [\n  //         {min: 1000},\n  //         {min: 500, max: 999},\n  //         {min: 100, max: 499},\n  //         {min: 10, max: 99},\n  //         {min: 1, max: 9},\n  //       ],\n  //       padding: 5,\n  //       // \"inverse\": false,\n  //       // \"splitNumber\": 5,\n  //       orient: province ? 'horizontal' : 'vertical',\n  //       showLabel: province ? false : true,\n  //       text: ['High', 'low'],\n  //       itemWidth: 10,\n  //       itemHeight: 10,\n  //       textStyle: {\n  //         fontSize: 10\n  //       }\n  //       // \"borderWidth\": 0\n  //     },\n  //     series: [{\n  //       left: 'center',\n  //       // top: '15%',\n  //       // bottom: '10%',\n  //       type: 'map',\n  //       name: 'Confirmed',\n  //       silent: province ? true : false,\n  //       label: {\n  //         show: true,\n  //         position: 'inside',\n  //         // margin: 8,\n  //         fontSize: 6\n  //       },\n  //       mapType: province ? province.pinyin : 'world',\n  //       data,\n  //       zoom: 1.2,\n  //       roam: false,\n  //       showLegendSymbol: false,\n  //       emphasis: {},\n  //       rippleEffect: {\n  //         show: true,\n  //         brushType: 'stroke',\n  //         scale: 2.5,\n  //         period: 4\n  //       }\n  //     }]\n  //   }\n  // }\n\n  // return (\n  //   loading ? <div className=\"loading\">Loading...</div> :\n  //   <ReactEcharts\n  //     echarts={echarts}\n  //     option={getOption()}\n  //     lazyUpdate={true}\n  //     onEvents={{\n  //       click (e) {\n  //         onClick(e.name)\n  //       }\n  //     }}\n  //   />\n  // )\n\n\n\n    // const csv = require('fast-csv')\n    // const fs = require('fs')\n    //\n\n  const getOption = () => {\n      return {\n          region: 'AU', // Africa\n          colorAxis: { colors: [\n                  '#ffc0b1',\n                  '#ff8c71',\n                  '#ef1717',\n                  '#9c0505'] },\n          backgroundColor: 'white',\n          datalessRegionColor: 'rgb(216,221,224)',\n          defaultColor: '#f5f5f5',\n          resolution: 'provinces'\n      }\n  };\n\n\n  return (\n    loading ? <div className=\"loading\">Loading...</div> :\n        <Chart\n            width= {window.innerWidth < 960?'100%':'auto'}\n            left=\"auto\"\n            align=\"right\"\n            top=\"40%\"\n            // width={'500px'}\n            // height={'300px'}\n            chartType=\"GeoChart\"\n            data={myData}\n            options={getOption()}\n            // Note: you will need to get a mapsApiKey for your project.\n            // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n            mapsApiKey=\"YOUR_KEY_HERE\"\n            rootProps={{ 'data-testid': '3' }}\n        />\n  )\n}\n\nexport default Map\n"],"sourceRoot":""}